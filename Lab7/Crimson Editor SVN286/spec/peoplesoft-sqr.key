[-COMMENT-:GLOBAL]
# sQr LANGUAGE KEYWORDS FILE
#
# CRIMSON EDITOR v3.0
# COPIED FROM PL/SQL KEYWORDS FILE
# ANDY FUGATE - 09/21/2001

[KEYWORDS0:GLOBAL]
abs add and array array-add array-divide array-multiply array-subtract as ascii ask
bold ceil clear case char chr clear-array close columns concat cond connect cos cosh create-array
dateadd datediff datetime datetostr display divide
edit else end-if end-while extract
file floor for-writing get goto graphic
if instr input length let lower lowercase lookup lpad ltrim
mod move multiply next-column new-report next-listing not
open or print put read record rpad rtrim
show stop string subtract strtodate substr
to translate type
unstring upper uppercase use-column while write

[KEYWORDS1:GLOBAL]
do begin-heading begin-footing begin-procedure begin-program
begin-report begin-select begin-setup begin-sql
end-footing end-heading end-procedure end-program
end-report end-select end-setup end-sql
loops
declare-layout end-declare declare-report
BEGIN-FOTTING BEGIN-HEADING BEGIN-PROCEDURE BEGIN-PROGRAM BEGIN-SETUP
Begin-Fotting Begin-Heading Begin-Procedure Begin-Program Begin-Setup
END-FOTTING END-HEADING END-PROCEDURE END-PROGRAM END-SETUP
End-Footing End-Heading End-Procedure End-Program End-Setup
begin-fotting begin-heading begin-procedure begin-program begin-setup
end-footing end-heading end-procedure end-program end-setup

[KEYWORDS2:GLOBAL]
 #include #define #endif #end-if #debug #else #if #ifdef #ifndef
 #sql-count #sqr-max-columns #sqr-max-lines #sqr-pid 
 #current-column #current-line #end-file #page-count
 #return-status #sql-pid #sql-status
 
 $current-date $sql-error $sql-locale $sql-program $sql-report
 $sql_platform $sqr-database $sqr-dbcs $sqr-encoding $sqr-locale
 $sqr-platform $sqr-program $sqr-report $sqr-ver
 $username
 
 #DEBUG #DEFINE #Debug #Define #ELSE #END-IF #Else #End-If
 #IF #IFDEF #IFNDEF #INCLUDE
 #If #Ifdef #Ifndef #Include
 #debug #define
 #else #end-if #endif
 #if #ifdef #ifndef
 #include

[KEYWORDS3:GLOBAL]
ADD ALL ALTER AND ANY AS ASC AVG
BEGIN BETWEEN BREAK BROWSE BULK BY
CASE CHECK CHECKPOINT CLOSE CLUSTERED COALESCE COMMIT COMMITTED
COMPUTE CONFIRM CONSTRAINT CONTINUE CONVERT COUNT CREATE CURRENT CURSOR
DATABASE DEALLOCATE DECLARE DEFAULT DELETE DESC DISK DISTINCT DOUBLE DROP
ELSE END EXCEPT EXEC EXECUTE EXISTS EXIT
FETCH FOR FOREIGN FROM
GOTO GRANT GROUP
HAVING
IDENTITY IF IN INDEX INSENSITIVE INSERT INTERSECT INTO IS ISOLATION
KEY KILL
LEVEL LIKE LINENO LOAD
MAX MIN
NOT NULL
OF OFF OFFSETS ON ONCE ONLY OPEN OPTION OR ORDER OVER
PACKAGE PERMANENT PLAN PRECISION PREPARE PRIMARY PRINT PROC PROCEDURE PUBLIC
RAISERROR READ RECONFIGURE REFERENCES REPEATABLE REPLICATION RETURN REVOKE ROLLBACK ROWCOUNT RULE
SAVE SCROLL SELECT SERIALIZABLE SET SHUTDOWN SOME STATISTICS SUM
TABLE TAPE TEMPORARY THEN TO TRANSACTION TRIGGER TRUNCATE
UNCOMMITTED UNION UNIQUE UPDATE USE USER
VALUES VARYING VIEW
WHEN WHERE WHILE WITH
distinct commit rollback from delete select truncate insert update where
having group by into order min max in

[KEYWORDS4:GLOBAL]
paper-size max-columns max-lines left-margin orientation line-height char-width layout

[KEYWORDS5:GLOBAL]
ADD
ALTER-LOCALE
ALTER-PRINTER
ARRAY-ADD
ARRAY-DIVIDE
ARRAY-MULTIPLY
ARRAY-SUBTRACT
ASK
Add
Alter-Locale
Alter-Printer
Array-Add
Array-Divide
Array-Multiply
Array-Subtract
Ask
BEGIN-DOCUMENT
BEGIN-SELECT
BEGIN-SQL
BREAK
Begin-Document
Begin-SQL
Begin-Select
Break
CALL
CALL SYSTEM
CALL SYSTEM USING
CLEAR-ARRAY
CLOSE
COLUMNS
COMMIT
CONCAT
CONNECT
CREATE-ARRAY
Call
Call System
Call System Using
Clear-Array
Close
Columns
Commit
Concat
Connect
Create-Array
DATE-TIME
DECLARE-CHART
DECLARE-IMAGE
DECLARE-LAYOUT
DECLARE-PRINTER
DECLARE-PROCEDURE
DECLARE-REPORT
DECLARE-TOC
DECLARE-VARIABLE
DISPLAY
DIVIDE
DO
Date-Time
Declare-Chart
Declare-Image
Declare-Layout
Declare-Printer
Declare-Procedure
Declare-Report
Declare-Toc
Declare-Variable
Display
Divide
Do
ELSE
ENCODE
END-DECLARE
END-DOCUMENT
END-EVALUATE
END-IF
END-SELECT
END-SQL
END-WHILE
EVALUATE
EXECUTE
EXISTS
EXIT-SELECT
EXTRACT
Else
Encode
End-Declare
End-Document
End-Evaluate
End-If
End-SQL
End-Select
End-While
Evaluate
Execute
Execute
Exists
Exit-Select
Extract
FIND
Find
GET
GOTO
GRAPHIC
GRAPHIC BOX
GRAPHIC HORZ-LINE
GRAPHIC VERT-LINE
Get
Goto
Graphic
Graphic Box
Graphic Horz-Line
Graphic Vert-Line
IF
INPUT
If
Input
LAST-PAGE
LET
LOAD-LOOKUP
LOOKUP
LOWERCASE
Last-Page
Let
Load-Lookup
Lookup
Lowercase
MBTOSBS
MOVE
MULTIPLY
Mbtosbs
Move
Multiply
NEW COLUMN
NEW-PAGE
NEW-REPORT
NEXT-COLUMN
NEXT-LISTING
NO-FORMFEED
New Column
New-Page
New-Report
Next-Column
Next-Listing
No-Formfeed
OPEN
Open
PAGE-NUMBER
PAGE-SIZE
POSITION
PRINT
PRINT-BAR-CODE
PRINT-CHART
PRINT-DIRECT
PRINT-IMAGE
PRINTER-DEINIT
PRINTER-INIT
PUT
Page-Number
Page-Size
Position
Print
Print-Bar-Code
Print-Chart
Print-Direct
Print-Image
Printer-DeInit
Printer-Init
Put
READ
ROLLBACK
Read
Rollback
SHOW
STOP
SUBTRACT
SUTOMBS
Sbtombs
Show
Stop
Subtract
TOC-ENTRY
Toc-Entry
UNSTRING
UPPERCASE
USE
USE-COLUMN
USE-PRINTER-TYPE
USE-PROCEDURE
USE-REPORT
Unstring
Uppercase
Use
Use-Column
Use-Printer-Type
Use-Procedure
Use-Report
WHILE
WRITE
While
Write
add
alter-locale
alter-printer
array-add
array-divide
array-divide
array-multiply
array-subtract
ask
begin-document
begin-select
begin-sql
break
call
call system
call system using
clear-array
close
columns
commit
concat
connect
create-array
date-time
declare-chart
declare-image
declare-layout
declare-printer
declare-procedure
declare-report
declare-toc
declare-variable
display
divide
do
else
encode
end-declare
end-document
end-evaluate
end-if
end-select
end-sql
end-while
evaluate
evaluate
execute
execute
exists
exit-select
extract
find
get
goto
graphic
graphic box
graphic horz-line
graphic vert-line
if
input
last-page
let
load-lookup
lookup
lowercase
mbtosbs
move
multiply
new column
new-page
new-report
next-column
next-listing
no-formfeed
open
page-number
page-size
position
print
print-bar-code
print-chart
print-direct
print-image
printer-deinit
printer-init
put
read
rollback
sbtombs
show
stop
sustract
toc-entry
unstring
uppercase
use
use-column
use-printer-type
use-procedure
use-report
while
write

[KEYWORDS8:GLOBAL]
break
evaluate
when
when-other
end-evaluate

[KEYWORDS9:GLOBAL]

